name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      
  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/atividadecicd:latest

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: SSH into EC2 and Deploy
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            # Instalar Docker se não estiver instalado
            if ! command -v docker &> /dev/null
            then
                echo "Docker não encontrado, instalando Docker..."
                sudo apt-get update
                sudo apt-get install -y docker.io
                sudo systemctl start docker
                sudo systemctl enable docker
            fi
            
            # Adicionar o usuário ubuntu ao grupo docker
            sudo usermod -aG docker $USER
            newgrp docker

            # Executar comandos Docker
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/atividadecicd:latest
            docker stop atividadecicd || true
            docker rm atividadecicd || true
            docker run -d -p 80:8080 --name atividadecicd ${{ secrets.DOCKERHUB_USERNAME }}/atividadecicd:latest
          EOF
